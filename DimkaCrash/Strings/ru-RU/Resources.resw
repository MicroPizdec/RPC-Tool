<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About.Text" xml:space="preserve">
    <value>О приложении</value>
  </data>
  <data name="AboutDevelopers.Text" xml:space="preserve">
    <value>Разработано MicroPizdec с ❤️</value>
  </data>
  <data name="AboutText.Text" xml:space="preserve">
    <value>RPC-Tool - простое в использовании приложение для создания своего Discord Rich Presence.</value>
  </data>
  <data name="AboutTitle" xml:space="preserve">
    <value>О RPC-Tool</value>
  </data>
  <data name="Button.Text" xml:space="preserve">
    <value>Кнопка</value>
  </data>
  <data name="ButtonText.Header" xml:space="preserve">
    <value>Текст кнопки:</value>
  </data>
  <data name="ButtonText.PlaceholderText" xml:space="preserve">
    <value>Текст</value>
  </data>
  <data name="ButtonURL.Header" xml:space="preserve">
    <value>URL кнопки:</value>
  </data>
  <data name="ButtonURL.PlaceholderText" xml:space="preserve">
    <value>/shrug</value>
  </data>
  <data name="ClientID.Header" xml:space="preserve">
    <value>Введите ID приложения:</value>
  </data>
  <data name="ClientID.PlaceholderText" xml:space="preserve">
    <value>ClientID</value>
  </data>
  <data name="Details.Header" xml:space="preserve">
    <value>Верхний текст:</value>
  </data>
  <data name="Details.PlaceholderText" xml:space="preserve">
    <value>Детали</value>
  </data>
  <data name="End.Header" xml:space="preserve">
    <value>Конец:</value>
  </data>
  <data name="End.PlaceholderText" xml:space="preserve">
    <value>Конечная отметка времени в мс</value>
  </data>
  <data name="Exit.Text" xml:space="preserve">
    <value>Закрыть</value>
  </data>
  <data name="File.Title" xml:space="preserve">
    <value>Файл</value>
  </data>
  <data name="GithubRepo.Content" xml:space="preserve">
    <value>Репозиторий GitHub</value>
  </data>
  <data name="Go.Content" xml:space="preserve">
    <value>Запустить</value>
  </data>
  <data name="Help.Title" xml:space="preserve">
    <value>Справка</value>
  </data>
  <data name="LargeImage.Text" xml:space="preserve">
    <value>Изображение</value>
  </data>
  <data name="LargeImageKey.Header" xml:space="preserve">
    <value>Ключ:</value>
  </data>
  <data name="LargeImageKey.PlaceholderText" xml:space="preserve">
    <value>Детали</value>
  </data>
  <data name="LargeImageText.Header" xml:space="preserve">
    <value>Текст:</value>
  </data>
  <data name="LargeImageText.PlaceholderText" xml:space="preserve">
    <value>Текст изображения при наведении мыши на него</value>
  </data>
  <data name="Links.Text" xml:space="preserve">
    <value>Ссылки</value>
  </data>
  <data name="New.Text" xml:space="preserve">
    <value>Создать</value>
  </data>
  <data name="NoInput.Title" xml:space="preserve">
    <value>ID приложения, верхний или нижний текст отсутствуют.</value>
  </data>
  <data name="Open.Text" xml:space="preserve">
    <value>Открыть</value>
  </data>
  <data name="Party.Text" xml:space="preserve">
    <value>Party</value>
  </data>
  <data name="PartyID.Header" xml:space="preserve">
    <value>Party ID:</value>
  </data>
  <data name="PartyID.PlaceholderText" xml:space="preserve">
    <value>Any value</value>
  </data>
  <data name="PartyMax.Header" xml:space="preserve">
    <value>Party max:</value>
  </data>
  <data name="PartyMax.PlaceholderText" xml:space="preserve">
    <value>Optional</value>
  </data>
  <data name="PartySize.Header" xml:space="preserve">
    <value>Party size:</value>
  </data>
  <data name="PartySize.PlaceholderText" xml:space="preserve">
    <value>Optional</value>
  </data>
  <data name="Save.Text" xml:space="preserve">
    <value>Сохранить</value>
  </data>
  <data name="SaveAs.Text" xml:space="preserve">
    <value>Сохранить как</value>
  </data>
  <data name="SaveSuccess.Title" xml:space="preserve">
    <value>Сохранено!</value>
  </data>
  <data name="SecondButton.Text" xml:space="preserve">
    <value>Вторая кнопка</value>
  </data>
  <data name="SmallImage.Text" xml:space="preserve">
    <value>Малое изображение</value>
  </data>
  <data name="SmallImageKey.Header" xml:space="preserve">
    <value>Ключ:</value>
  </data>
  <data name="SmallImageKey.PlaceholderText" xml:space="preserve">
    <value>Само за себя говорит</value>
  </data>
  <data name="SmallImageText.Header" xml:space="preserve">
    <value>Текст:</value>
  </data>
  <data name="SmallImageText.PlaceholderText" xml:space="preserve">
    <value>Тоже само за себя говорит</value>
  </data>
  <data name="Start.Header" xml:space="preserve">
    <value>Начало:</value>
  </data>
  <data name="Start.PlaceholderText" xml:space="preserve">
    <value>Начальная отметка времени в мс</value>
  </data>
  <data name="StartFailed.Subtitle" xml:space="preserve">
    <value>Проверьте, предоставлен ли корректный ClientID.</value>
  </data>
  <data name="StartFailed.Title" xml:space="preserve">
    <value>Не удалось запустить ваш RPC.</value>
  </data>
  <data name="StartSuccess.Title" xml:space="preserve">
    <value>Ваш RPC успешно запущен!</value>
  </data>
  <data name="State.Header" xml:space="preserve">
    <value>Нижний текст:</value>
  </data>
  <data name="State.PlaceholderText" xml:space="preserve">
    <value>Состояние</value>
  </data>
  <data name="Stop.Content" xml:space="preserve">
    <value>Стоп</value>
  </data>
  <data name="StopSuccess.Title" xml:space="preserve">
    <value>Ваш RPC успешно остановлен!</value>
  </data>
  <data name="Text.Text" xml:space="preserve">
    <value>Текст</value>
  </data>
  <data name="Timestamp.Text" xml:space="preserve">
    <value>Отметка времени</value>
  </data>
</root>